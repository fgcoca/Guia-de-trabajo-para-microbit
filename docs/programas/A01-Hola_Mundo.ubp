module main
author unknown
version 1 0 
description ''

script 106 57 {
whenStarted
'[display:mbDisplayOff]'
forever {
  scroll_text 'Hola Mundi!'
  waitMillis 1000
  '[display:mbDisplay]' 18284864
  waitMillis 1000
  '[display:mbDisplayOff]'
  '[display:mbPlot]' 1 1
  '[display:mbPlot]' 5 1
  '[display:mbPlot]' 3 3
  waitMillis 1000
}
}


module 'LED Display' Output
author MicroBlocks
version 1 5 
tags pixel matrix led tft 
description 'Display primitives for the 5x5 LED display on the BBC micro:bit, Calliope mini and M5Atom Matrix. Boards with TFT displays (such as the Citilab ED1 or the M5Stack family) support these primitives with a simulated "fat pixel" display.'
variables _stop_scrolling_text 

  spec ' ' '[display:mbDisplay]' 'display _' 'microbitDisplay' 15237440
  spec ' ' '_set display color' 'set display color _' 'color'
  spec ' ' '[display:mbDisplayOff]' 'clear display'
  space
  spec ' ' '[display:mbPlot]' 'plot x _ y _' 'num num' 3 3
  spec ' ' '[display:mbUnplot]' 'unplot x _ y _' 'num num' 3 3
  space
  spec ' ' 'displayCharacter' 'display character _' 'str' 'A'
  spec ' ' 'scroll_text' 'scroll text _ : pausing _ ms' 'str num' 'HELLO ROSA!' 100
  spec ' ' 'stopScrollingText' 'stop scrolling'

to '_set display color' color {
  callCustomCommand '[display:mbSetColor]' ('[data:makeList]' color)
}

to displayCharacter s {
  s = ('[data:join]' '' s)
  if ((size s) == 0) {
    '[display:mbDisplayOff]'
    return 0
  }
  '[display:mbDrawShape]' ('[display:mbShapeForLetter]' (at 1 s))
}

to scroll_text text optionalDelay {
  text = ('[data:join]' '' text)
  local 'delay' 100
  if ((pushArgCount) > 1) {
    delay = optionalDelay
  }
  _stop_scrolling_text = (booleanConstant false)
  if ('Pico:ed' == (boardType)) {
    for position (((size text) * 6) + 18) {
      if _stop_scrolling_text {return 0}
      '[display:mbDisplayOff]'
      '[tft:text]' text (17 - position) 0 (colorSwatch 125 125 125 255) 1 true
      waitMillis (delay / 2)
    }
  } else {
    for position (((size text) * 6) + 6) {
      if _stop_scrolling_text {return 0}
      for i (size text) {
        '[display:mbDrawShape]' ('[display:mbShapeForLetter]' ('[data:unicodeAt]' i text)) (((i * 6) + 2) - position) 1
      }
      waitMillis delay
    }
  }
}

to stopScrollingText {
  _stop_scrolling_text = (booleanConstant true)
  waitMillis 10
  '[display:mbDisplayOff]'
}


module 'Touch (microbit)' Input
author MicroBlocks
version 1 0 
description 'Capacitive touch sensing for micro:bit v1 and v2.'
variables _lowCount _isHigh 

  spec 'r' 'touch' 'pin _ touched : threshold _' 'num num' 0 0
  spec 'r' 'logo touched' 'logo touched'

to 'logo touched' {
  if ((boardType) == 'micro:bit') {return (booleanConstant false)}
  return (touch 26 0)
}

to touch pin optionalThreshold {
  comment 'Discharge pin'
  digitalWriteOp pin false
  local 'threshold' 0
  if ((pushArgCount) > 1) {
    threshold = optionalThreshold
  }
  if (threshold <= 0) {
    comment 'Select threshold based on board type'
    if ((boardType) == 'micro:bit') {
      threshold = 9
    } else {
      threshold = 15
    }
  }
  local 'n' 0
  comment 'Wait for pin to become high, incrementing n'
  repeatUntil (digitalReadOp pin) {
    n += 1
    if (n >= threshold) {
      comment 'Long charging time means pin is touched'
      _isHigh = (booleanConstant true)
      _lowCount = 0
      digitalWriteOp pin false
      return _isHigh
    }
  }
  digitalWriteOp touchPin false
  if (_isHigh == 0) {
    _isHigh = (booleanConstant false)
  }
  comment 'count is < threshold so pin not touched'
  if _isHigh {
    comment 'Require several low counts in a row
to exit "isHigh" state to avoid jitter.'
    _lowCount += 1
    if (_lowCount > 2) {
      _isHigh = (booleanConstant false)
    }
  }
  return _isHigh
}

